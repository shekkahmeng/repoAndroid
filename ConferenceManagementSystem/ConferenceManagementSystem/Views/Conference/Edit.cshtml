@model ConferenceManagementSystem.Models.Conference

@{
    ViewBag.Title = "Edit";
}

<h2 class="not-login">Edit <small> customize user's detail here</small></h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal form-center form-gradient">
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.ConferenceId)

        <div class="form-group">
            @Html.LabelFor(model => model.Username, new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Username)
                @Html.ValidationMessageFor(model => model.Username)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Password)
                @Html.ValidationMessageFor(model => model.Password)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmedPassword, new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.ConfirmedPassword)
                @Html.ValidationMessageFor(model => model.ConfirmedPassword)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrganizerName, new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.OrganizerName)
                @Html.ValidationMessageFor(model => model.OrganizerName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Website, new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Website)
                @Html.ValidationMessageFor(model => model.Website)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Date)
                @Html.ValidationMessageFor(model => model.Date)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContactName, new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.ContactName)
                @Html.ValidationMessageFor(model => model.ContactName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Contact, new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Contact)
                @Html.ValidationMessageFor(model => model.Contact)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PaperPrefix, new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.PaperPrefix)
                @Html.ValidationMessageFor(model => model.PaperPrefix)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LinkDirectory, new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.LinkDirectory)
                @Html.ValidationMessageFor(model => model.LinkDirectory)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SystemEmail, new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.SystemEmail)
                @Html.ValidationMessageFor(model => model.SystemEmail)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-3 col-md-9">
                <input type="submit" value="Save" class="btn btn-default btn-gradient" />
            </div>
        </div>
        <hr/>
    </div>
}

<div class="col-md-offset-2">
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default btn-gradient" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
